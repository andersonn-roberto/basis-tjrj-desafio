// <auto-generated />
using LivrosApp.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LivrosApp.Infra.Migrations
{
    [DbContext(typeof(LivrosAppContext))]
    partial class LivrosAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LivrosApp.Dominio.Models.Assunto", b =>
                {
                    b.Property<int>("CodAs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAs"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CodAs");

                    b.ToTable("Assuntos", (string)null);
                });

            modelBuilder.Entity("LivrosApp.Dominio.Models.Autor", b =>
                {
                    b.Property<int>("CodAu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAu"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CodAu");

                    b.ToTable("Autores", (string)null);
                });

            modelBuilder.Entity("LivrosApp.Dominio.Models.CanalVenda", b =>
                {
                    b.Property<int>("CodCv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCv"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CodCv");

                    b.ToTable("CanalVendas", (string)null);
                });

            modelBuilder.Entity("LivrosApp.Dominio.Models.Livro", b =>
                {
                    b.Property<int>("CodL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodL"));

                    b.Property<string>("AnoPublicacao")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("Edicao")
                        .HasColumnType("int");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CodL");

                    b.ToTable("Livros", (string)null);
                });

            modelBuilder.Entity("LivrosApp.Dominio.Models.LivroAssunto", b =>
                {
                    b.Property<int>("CodLa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodLa"));

                    b.Property<int>("Assunto_CodAs")
                        .HasColumnType("int");

                    b.Property<int>("Livro_CodL")
                        .HasColumnType("int");

                    b.HasKey("CodLa");

                    b.HasIndex("Assunto_CodAs");

                    b.HasIndex("Livro_CodL");

                    b.ToTable("LivrosAssuntos", (string)null);
                });

            modelBuilder.Entity("LivrosApp.Dominio.Models.LivroAutor", b =>
                {
                    b.Property<int>("CodLa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodLa"));

                    b.Property<int>("Autor_CodAu")
                        .HasColumnType("int");

                    b.Property<int>("Livro_CodL")
                        .HasColumnType("int");

                    b.HasKey("CodLa");

                    b.HasIndex("Autor_CodAu");

                    b.HasIndex("Livro_CodL");

                    b.ToTable("LivrosAutores", (string)null);
                });

            modelBuilder.Entity("LivrosApp.Dominio.Models.TabelaPreco", b =>
                {
                    b.Property<int>("CodTp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTp"));

                    b.Property<int>("CodCv")
                        .HasColumnType("int");

                    b.Property<int>("CodL")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CodTp");

                    b.HasIndex("CodCv");

                    b.HasIndex("CodL");

                    b.ToTable("TabelaPrecos", (string)null);
                });

            modelBuilder.Entity("LivrosApp.Dominio.Models.LivroAssunto", b =>
                {
                    b.HasOne("LivrosApp.Dominio.Models.Assunto", "Assunto")
                        .WithMany("LivrosAssuntos")
                        .HasForeignKey("Assunto_CodAs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivrosApp.Dominio.Models.Livro", "Livro")
                        .WithMany("LivrosAssuntos")
                        .HasForeignKey("Livro_CodL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assunto");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("LivrosApp.Dominio.Models.LivroAutor", b =>
                {
                    b.HasOne("LivrosApp.Dominio.Models.Autor", "Autor")
                        .WithMany("LivrosAutores")
                        .HasForeignKey("Autor_CodAu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivrosApp.Dominio.Models.Livro", "Livro")
                        .WithMany("LivrosAutores")
                        .HasForeignKey("Livro_CodL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("LivrosApp.Dominio.Models.TabelaPreco", b =>
                {
                    b.HasOne("LivrosApp.Dominio.Models.CanalVenda", "CanalVenda")
                        .WithMany("TabelaPrecos")
                        .HasForeignKey("CodCv")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivrosApp.Dominio.Models.Livro", "Livro")
                        .WithMany("TabelaPrecos")
                        .HasForeignKey("CodL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CanalVenda");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("LivrosApp.Dominio.Models.Assunto", b =>
                {
                    b.Navigation("LivrosAssuntos");
                });

            modelBuilder.Entity("LivrosApp.Dominio.Models.Autor", b =>
                {
                    b.Navigation("LivrosAutores");
                });

            modelBuilder.Entity("LivrosApp.Dominio.Models.CanalVenda", b =>
                {
                    b.Navigation("TabelaPrecos");
                });

            modelBuilder.Entity("LivrosApp.Dominio.Models.Livro", b =>
                {
                    b.Navigation("LivrosAssuntos");

                    b.Navigation("LivrosAutores");

                    b.Navigation("TabelaPrecos");
                });
#pragma warning restore 612, 618
        }
    }
}
